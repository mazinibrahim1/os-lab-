//get page
if(R1==1)then
	[SYSTEM_STATUS_TABLE + 3]=[SYSTEM_STATUS_TABLE + 3]+1;
	while([SYSTEM_STATUS_TABLE + 2]==0)do
		[PROCESS_TABLE+16*[SYSTEM_STATUS_TABLE+1]+4]=WAIT_MEM;
		multipush(R1,R2,R3,R4);
		call MOD_5;
		multipop(R1,R2,R3,R4);
	endwhile;
	
	[SYSTEM_STATUS_TABLE + 3]=[SYSTEM_STATUS_TABLE + 3]-1;
	[SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]-1;//mem free count
	alias i R3;
	i=0;
	while(i<128) do
		if([MEMORY_FREE_LIST+i]==0) then
			[MEMORY_FREE_LIST+i]=1;
			break;
		endif;
		i=i+1;
	endwhile;
	R0=i;
	return;
endif;

//free page
if(R1==2)then
	[MEMORY_FREE_LIST+R2]=[MEMORY_FREE_LIST+R2]-1;
	if([MEMORY_FREE_LIST+R2]==0) then
		[SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]+1; //mem free count;
		alias i R10;
		i=0;
		while(i<16) do
			if([PROCESS_TABLE+16*i+4]==WAIT_MEM) then
				[PROCESS_TABLE+16*i+4]=READY;
			endif;
			i=i+1;
		endwhile;
	endif;
	return;
endif;

//get code page
if(R1==5)then
	alias blockNum R2;
	alias pid_ind R4;
	alias page R5;
	
	pid_ind=0;
	while(pid_ind<MAX_PROC_NUM)do
		page=4;
		while(page<4+MAX_FILE_BLOCKS)do
			if(([DISK_MAP_TABLE + pid_ind*10 + page] == blockNum) && ([PAGE_TABLE_BASE + 20*pid_ind + 2*page] != -1)) then
				R0 = [PAGE_TABLE_BASE + 20*pid_ind + 2*page];
				[MEMORY_FREE_LIST + R0] = [MEMORY_FREE_LIST + R0] + 1;
				return;
			endif;
		page = page + 1;
		endwhile;
	pid_ind = pid_ind + 1;
	endwhile;
	
	multipush(R1,R2,R4,R5);
	R1=1;
	call MOD_2;
	multipop(R1,R2,R4,R5);
	R4 = blockNum;		
	R1 = DISK_LOAD;
	R2 = [SYSTEM_STATUS_TABLE + 1];		
	R3 = R0;

	multipush(R0);
	call MOD_4;		
	multipop(R0);
	breakpoint;
	return;
endif;

if(R1== GET_FREE_BLOCK) then
	alias i R2;

	i = DISK_FREE_AREA;
	while(i < DISK_SWAP_AREA) do
		if([DISK_FREE_LIST + i] == 0) then
			[DISK_FREE_LIST + i] = 1;	//setting found free block in dfl to 1
			R0 = i;				//returing free block num found
			return;
		endif;
	i = i + 1;
	endwhile;

	//	return -1 if no free block present
	R0 = -1;
	return;

endif;

//relese block
if(R1==4)then
	
	[DISK_FREE_LIST + R2] = [DISK_FREE_LIST + R2] - 1;		//decrementing count of corresponding block in DISK_FREE_LIST
	return;

endif;


if (R1 == 6)then

    alias blockNo R2;

    blockNo = DISK_SWAP_AREA;
    while(blockNo < DISK_SIZE &&  [DISK_FREE_LIST + blockNo]!=0 )do
        blockNo = blockNo + 1;
    endwhile;

    if (blockNo==DISK_SIZE)then
        R0 = -1;
    else
        [DISK_FREE_LIST + blockNo] = 1;
        R0 = blockNo;
    endif;
    return;
endif;


return;
