//load library 
loadi(63,13);
loadi(64,14);

//load init 
loadi(65,7);
loadi(66,8);

//load init10
loadi(22,35);
loadi(23,36);

//load int 4
loadi(10, 23);
loadi(11, 24);

//load int 7
loadi(16,29);
loadi(17,30);

// load int 6
loadi(14,27);
loadi(15,28);

//load int 8
loadi(18,31);
loadi(19,32);

//load int 9
loadi(20,33);
loadi(21,34);

//load int 11
loadi(24, 37);
loadi(25, 38);

//load int 15
loadi(32, 45);
loadi(33, 46);

//load exception handler
loadi(2,15);
loadi(3,16);

//load DISK INT
loadi(6,19);
loadi(7,20);

//load console
loadi(8,21);
loadi(9,22);

//load module0
loadi(40,53);
loadi(41,54);

//load module4
loadi(48,61);
loadi(49,62);

//Module 1
loadi(42,55);
loadi(43,56);

//Module 2
loadi(44,57);
loadi(45,58);

//Inode Table
loadi(59,3);
loadi(60,4);

//load root file
loadi(62, 5);

//disk free list 
loadi(61,2);

//load int 13
loadi(28, 41);
loadi(29, 42);

//load int 14
loadi(30, 43);
loadi(31, 44);


//Setting memory free list
alias i R0;
i=0;
while(i<=82) do
	[MEMORY_FREE_LIST+i]=1;
	i=i+1;
endwhile;
[SYSTEM_STATUS_TABLE+2]=0;
while(i<=127) do
	[MEMORY_FREE_LIST+i]=0;
	[SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]+1;
	i=i+1;
endwhile;

[SYSTEM_STATUS_TABLE+3]=0;
[TERMINAL_STATUS_TABLE]=0;
[DISK_STATUS_TABLE]=0;
// timer
loadi(4, 17);
loadi(5, 18);
// schdeuler
loadi(50,63);
loadi(51,64);

//---------------------------------------INIT PROCESS -------------------------//

[PROCESS_TABLE + 13+16] = 8*512;
[PROCESS_TABLE + 12+16] = 0;
[PROCESS_TABLE + 14+16] = PAGE_TABLE_BASE+20;//ptbr
[PROCESS_TABLE + 15+16] = 10;
[PROCESS_TABLE + 11+16] = 80;
[PROCESS_TABLE + 1+16] = 1;
[PROCESS_TABLE + 16 + 3] = 1;	//set user id
[PROCESS_TABLE + 4+16] = CREATED;
PTBR = PAGE_TABLE_BASE+20;
PTLR = 10;
//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

[76*512] = [65 * 512 + 1];
//

//PRE PROCESS TABLE
	alias ind R13;
	ind=496;
	while(ind<=511) do
		[[PROCESS_TABLE + 11+16]*512+ind]=-1;
		ind=ind+2;
	endwhile;

//ALL OTHER TERMINATED
i = 4;
while(i<16) do
[PROCESS_TABLE+16*i+4] = TERMINATED;
i = i+1;
endwhile;

//initialize FILE(INDOE)_STATUS_TABLE
i = 0;				//setting all non user program pages to 1
while(i < MAX_FILE_NUM) do
	[FILE_STATUS_TABLE + 2*i + 0] = -1;
	[FILE_STATUS_TABLE + 2*i + 1] = -1;
i = i + 1;
endwhile;

//initialize BUFFER_TABLE
i = 0;				//setting all non user program pages to 1
while(i < MAX_BUFFER) do
	[BUFFER_TABLE + 4*i + 0] = -1;
	[BUFFER_TABLE + 4*i + 1] = 0;
	[BUFFER_TABLE + 4*i + 2] = -1;
i = i + 1;
endwhile;

//intializing DISK_MAP_TABLE for INIT
i = 0;
while(i < 10) do
	[DISK_MAP_TABLE + 10 + i] = -1;
i = i + 1;
endwhile;
[DISK_MAP_TABLE + 10 + 4] = 7;
[DISK_MAP_TABLE + 10 + 5] = 8;

// semaphore table initialize
i = 0;				
while(i < MAX_SEM_COUNT) do
	[SEMAPHORE_TABLE + 4*i]=-1;
	[SEMAPHORE_TABLE + 4*i+1]= 0;

	i = i + 1;
endwhile;
return;

